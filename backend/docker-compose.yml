version: '3.8'

services:
  # Core SIEM Services
  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=cache
      - ELASTICSEARCH_HOST=elasticsearch
    volumes:
      - ./config:/etc/siem
      - ./logs:/var/log/siem
    depends_on:
      - db
      - cache
      - elasticsearch
    networks:
      - siem-network

  dashboard:
    build:
      context: ./src/dashboard
      dockerfile: Dockerfile
    ports:
      - "8443:8443"
    environment:
      - API_URL=http://api:8000
    volumes:
      - ./config:/etc/siem
    depends_on:
      - api
    networks:
      - siem-network

  collector:
    build:
      context: ./src/collector
      dockerfile: Dockerfile
    ports:
      - "514:514/tcp"
      - "514:514/udp"
    volumes:
      - ./config:/etc/siem
      - ./logs:/var/log/siem
    depends_on:
      - api
    networks:
      - siem-network

  analyzer:
    build:
      context: ./src/analyzer
      dockerfile: Dockerfile
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=cache
    volumes:
      - ./config:/etc/siem
      - ./models:/opt/siem/models
    depends_on:
      - elasticsearch
      - cache
    networks:
      - siem-network

  # Offensive Security Services
  scanner:
    build:
      context: ./src/offensive/scanner
      dockerfile: Dockerfile
    environment:
      - API_URL=http://api:8000
    volumes:
      - ./config:/etc/siem
    depends_on:
      - api
    networks:
      - siem-network

  exploit:
    build:
      context: ./src/offensive/exploit
      dockerfile: Dockerfile
    environment:
      - API_URL=http://api:8000
    volumes:
      - ./config:/etc/siem
    depends_on:
      - api
    networks:
      - siem-network

  # Infrastructure Services
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=siem
      - POSTGRES_USER=siem
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres:/docker-entrypoint-initdb.d
    networks:
      - siem-network
    secrets:
      - db_password

  cache:
    image: redis:6
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - siem-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./config/elasticsearch:/usr/share/elasticsearch/config
    networks:
      - siem-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - siem-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  siem-network:
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt
